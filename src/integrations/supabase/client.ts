
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jqpivqdwblrccjzicnxn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpxcGl2cWR3YmxyY2NqemljbnhuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3MDc0OTcsImV4cCI6MjA1NzI4MzQ5N30.DqU__7FqUW45Mu96gdJbuLjuAEjI4CMEQW95Z3Cg92o";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'getigne-auth-token',
    storage: {
      getItem: (key) => {
        try {
          const value = localStorage.getItem(key);
          console.log(`[AUTH] Retrieved storage for key ${key}: ${value ? 'found' : 'not found'}`);
          return value;
        } catch (error) {
          console.error(`[AUTH] Error accessing localStorage for key ${key}:`, error);
          return null;
        }
      },
      setItem: (key, value) => {
        try {
          localStorage.setItem(key, value);
          console.log(`[AUTH] Set storage for key ${key}`);
        } catch (error) {
          console.error(`[AUTH] Error setting localStorage for key ${key}:`, error);
        }
      },
      removeItem: (key) => {
        try {
          localStorage.removeItem(key);
          console.log(`[AUTH] Removed storage for key ${key}`);
        } catch (error) {
          console.error(`[AUTH] Error removing localStorage for key ${key}:`, error);
        }
      },
    },
    detectSessionInUrl: true,
    flowType: 'pkce',
  }
});
